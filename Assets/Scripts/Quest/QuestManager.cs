using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using DG.Tweening;

//クエスト全体を管理する
public class QuestManager : MonoBehaviour
{
    public StageUIManager stageUI;
    public GameObject enemyPrefab;
    public BattleManager battleManager;
    public SceneTransitionManager sceneTransitionManager;
    public GameObject questBG;

    //敵に遭遇するテーブル：−1なら遭遇しない、0なら遭遇
    int[] encountTable = { -1, -1, 0, -1, 0, -1 };

    int currentStage = 0; //現在のステージ進行度

    private void Start()
    {
        stageUI.UpdateUI(currentStage);
        DialogTextManager.instance.SetScenarios(new string[] { "ダンジョンについた。" });
    }

    //Nextボタンが押されたら
    public void OnNextButton()
    {
        SoundManager.instance.PlaySE(0);
        stageUI.HideButtons();
        StartCoroutine(Searching());
    }

    IEnumerator Searching()
    {
        DialogTextManager.instance.SetScenarios(new string[] { "探索中・・・" });

        //背景を進んでいるように見せる
        questBG.transform.DOScale(new Vector3(1.5f, 1.5f, 1.5f), 2f).OnComplete(() => questBG.transform.localScale = new Vector3(1, 1, 1));

        //進んだ背景をフェードアウトさせる
        SpriteRenderer questBGSpriteRenderer = questBG.GetComponent<SpriteRenderer>();
        questBGSpriteRenderer.DOFade(0f, 2f).OnComplete(() => questBGSpriteRenderer.DOFade(1f, 0f));

        //処理を待機させる
        yield return new WaitForSeconds(2f);

        //ステージ進行度を1進める
        currentStage++;

        //ステージ進行度をUIに反映
        stageUI.UpdateUI(currentStage);

        if (encountTable.Length <= currentStage)
        {
            QuestClear();
        }
        else if (encountTable[currentStage] == 0)
        {
            EncountEnemy();
        }
        else
        {
            stageUI.ShowButtons();
        }
    }


    //街に戻るボタンを押されたら
    public void OnTapTownButtton()
    {
        SoundManager.instance.PlaySE(0);
    }

    public void EncountEnemy()
    {
        DialogTextManager.instance.SetScenarios(new string[] {"モンスターに遭遇した！！" });
        stageUI.HideButtons();
        GameObject enemyObj = Instantiate(enemyPrefab);
        EnemyManager enemy = enemyObj.GetComponent<EnemyManager>();
        battleManager.SetUp(enemy);
    }

    //バトル終了処理
    public void EndBattle()
    {
        stageUI.ShowButtons();
    }

    //プレイヤー戦闘不能処理
    public void QuestFail()
    {
        sceneTransitionManager.LoadTo("Town");
    }

    void QuestClear()
    {
        DialogTextManager.instance.SetScenarios(new string[] { "宝箱を手に入れた！！", "街に戻ろう。" });
        //クエストクリア音を鳴らす
        SoundManager.instance.StopBGM();
        SoundManager.instance.PlaySE(2);
        //街に戻るボタンのみ表示する
        stageUI.ShowClearText();
    }
}
